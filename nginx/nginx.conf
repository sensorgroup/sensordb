# Good example : http://stackoverflow.com/questions/7934574/nginx-redirect-https-back-to-http-when-leaving-a-secured-page

user www-data;
worker_processes  2;

error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
    use epoll;
}

http {
	server_names_hash_bucket_size 64;
  sendfile on;
  keepalive_timeout  65;
  tcp_nopush  on;
  tcp_nodelay off;

  # Where to store the body of large client requests on disk
  # NGINX will stream this to disk before posting it to your Mongrels,
  # preventing slow clients tying up your app.
	client_body_temp_path /var/spool/nginx-client-body 1 2;

  # Max size of a request from a client (usually a POST).  This will limit
  # the size of file uploads to your app
  client_max_body_size 1m;

  include       /etc/nginx/mime.types;
	default_type application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] '
   								'"$request" $status $body_bytes_sent "$http_referer" '
   								'"$http_user_agent" "$http_x_forwarded_for"' ;

  access_log	/var/log/nginx/access.log main;

  ## Compression
  gzip on;
  gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_proxied any;
  gzip_min_length  1100;
  gzip_buffers 16 8k;
  gzip_types text/plain text/html text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;
  # Some version of IE 6 don't handle compression well on some mime-types, so just disable for them
  gzip_disable "MSIE [1-6].(?!.*SV1)";
  # Set a vary header so downstream proxies don't send cached gzipped content to IE6
  gzip_vary on;

	# Send along useful info to the mongrels
  proxy_set_header  X-Real-IP  $remote_addr;
  proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header Host $http_host;
  proxy_redirect false;
  proxy_max_temp_file_size 0;

	# proxy_cache_path  /var/www/cache levels=1:2 keys_zone=my-cache:8m max_size=1000m inactive=600m;
  # proxy_temp_path /var/www/cache/tmp;

  server {
  	listen   80; ## listen for ipv4
  	listen   [::]:80 default ipv6only=on; ## listen for ipv6
  	server_name  localhost;

  	access_log  /var/log/nginx/localhost.access.log;

  	location ^~ /secure/ {
  		rewrite ^ https://localhost$request_uri? permanent;
  	}

  location / {
                  proxy_pass         http://127.0.0.1:8080;
  #                proxy_cache my-cache;
  #                proxy_cache_valid  200 302  60m;
  #                proxy_cache_valid  404      1m;
          }
  }

  server {
  	listen   443;
  	server_name  localhost;

  	ssl  on;
  	ssl_certificate  localhost.cer;
  	ssl_certificate_key  localhost.key;

  	ssl_session_timeout  5m;
  	proxy_set_header X_FORWARDED_PROTO https;
		location /secure/ {
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-M-Secure "true";
        proxy_redirect off;
        proxy_max_temp_file_size 0;
        proxy_pass http://127.0.0.1:3000;
    }

    location / {
        rewrite ^(.*) http://$host$1 permanent; # redirect to http
    }
  }
}

