package models

import play.api.Play.current
import org.squeryl.PrimitiveTypeMode._
import org.squeryl.annotations.Column
import java.util.Date
import play.db.DB
import org.squeryl.adapters.PostgreSqlAdapter
import org.squeryl.{KeyedEntity, Session, SessionFactory, Schema}
import java.sql.Timestamp
import sensordb.Utils

class BaseEntity extends KeyedEntity[Long] {
  val id:Long = 0
  var updated_at = new Timestamp(System.currentTimeMillis)
  val created_at = new Timestamp(System.currentTimeMillis)
  var name:String="not specified"
  var description:String=""
  var picture_path:Option[String]=None
  var token:String=Utils.uuid()
  var website:Option[String]=None
  var parent_id:Int = -1
}
class User(var password: String,var timezone:Int) extends BaseEntity {

}

object SDBTables extends Schema {
  val users = table[User]("Users")
  SessionFactory.concreteFactory = Some(()=> Session.create( DB.getConnection, new PostgreSqlAdapter))
   on(users)(a=> declare(
//    a.name  is(unique,indexed,dbType("varchar(30)")),
//    a.id    is(unique,indexed,autoIncremented)
  ))

}


